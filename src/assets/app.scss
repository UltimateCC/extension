@import 'fonts';
@import 'vars';

* { box-sizing: border-box; margin: 0; padding: 0; }
html, body { 
	height: 100%;
	font-family: $settings-font-family;
}
#app { height: 100%; }

body #ultimate-closed-caption {
	// Lock scroll
	max-width: 100vw;
	max-height: 100vh;
	height: 100%;
	padding: $caption-movable-Y $caption-movable-X; // Advice by twitch 5rem 7rem 5rem 0
	position: relative; // Not necessary, just to show what is the container of position: absolute
	font-size: $settings-font-size;

	// Caption container
	#caption-movable-area {
		// Do calc only if needed
		width: if($caption-movable-X == 0, 100vw, calc(100vw - #{$caption-movable-X} * 2));
		height: if($caption-movable-Y == 0, 100vh, calc(100vh - #{$caption-movable-Y} * 2));
		position: relative;

		// Caption box container
		#caption-container {
			position: absolute; // To be able to move it
			
			// Use variables
			color: var(--captions-text-color);
			font-family: var(--captions-font-family);
			font-size: var(--captions-font-size);
			text-align: var(--captions-text-align);
			text-transform: var(--captions-text-transform);
			-webkit-text-stroke: var(--captions-stroke-color) var(--captions-stroke-size);

			&:not(.locked) {
				cursor: move;
				user-select: none;
			}

			border-radius: 0.1em;
			display: flex;
			flex-direction: column-reverse;

			// Transition for all border radius
			transition: border-top-left-radius 2.2s ease-in-out;
			&.have-empty-box {
				backdrop-filter: blur(var(--captions-background-opacity));
				
				.caption-container-box {
					backdrop-filter: none;
					border-top-left-radius: initial;
					border-top-right-radius: initial; 
				}
			}

			.empty-box {
				background-color: var(--captions-background-color);
				height: 100%;
				border-top-left-radius: inherit;
				border-top-right-radius: inherit; 
			}

			.caption-container-box {
				padding: $caption-container-padding;
				background-color: var(--captions-background-color);
				backdrop-filter: blur(var(--captions-background-opacity));
				border-radius: inherit;

				.caption-content-box {
					display: flex;
					flex-direction: column-reverse;
	
					overflow: hidden; // Don't show the rest of the text
					
					font-size: 1em;
					max-height: 100%;
	
					p { // Apply text settings
						line-height: $caption-line-height;
						font-size: 1em;
						color: inherit;
						font-family: inherit;
					}
				}
			}
		}
	}

	// Settings box
	#settings-container {
		position: absolute;
		left: 0;
		top: $settings-movable-top;
		z-index: 10;

		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5em;

		$button-container-height: calc($buttons-height * $buttons-font-size + $buttons-padding-Y*2);
		/*
			100vh = 100% of the height of the screen
			- $settings-movable-top = the top of the settings box
			- $settings-movable-bottom = the bottom of the settings box
			- $button-container-height = the height of the buttons container
			- $buttons-settings-gap = the minimum gap between the settings wheel and the settings box
		*/
		max-height: calc(100vh - #{$settings-movable-top + $settings-movable-bottom} - #{$button-container-height} - #{$buttons-settings-gap});

		.settings-box {
			background-color: rgba($settings-background-color, $settings-background-opacity);
			backdrop-filter: blur(7px);
			color: $settings-text-color;
			border-radius: 0.2em;
			box-shadow: 0 0 2em 0.25em $settings-darken-area;
		}

		#close-settings-button {
			position: absolute;
			top: -0.75em;
			right: -0.75em;
			border: none;
			background-color: $theme-background-color;

			font-size: 1em;
			padding: 0.5em;
			border-radius: 50%;
			line-height: 0.5em;
			z-index: 11;
			box-shadow: -0.1em 0.1em 10px 2px $settings-darken-area;

			svg > * {
				fill: $settings-text-color;
			}
			transition: transform 0.2s ease-in-out;

			&:hover {
				transform: scale(1.1);
			}
		}

		#settings-main {
			width: $settings-width;
			padding: 0.5em;

			z-index: 1;

			border-top-left-radius: 0;
			border-bottom-left-radius: 0;

			display: flex;
			flex-direction: column;
			justify-content: space-between;

			overflow: hidden auto;

			// Scrollbar with simplebar lib
			.simplebar-scrollbar::before {
				background-color: $settings-text-color;
			}

			// Main content
			.caption-settings-container {
				display: flex;
				justify-content: space-between;
				align-items: center;
				flex-direction: column;
				gap: $settings-main-gap;

				.caption-group {
					width: 100%;
					display: flex;
					justify-content: space-between;
					flex-direction: column;
					background-color: $settings-darken-area;
					border-radius: $settings-border-radius;
					box-shadow: 0 0 0.5em 0.1em $settings-darken-area inset;

					// If it's open, change the rotation
					&.isOpen .caption-group-header .dropdown-icon svg {
						transform: rotate(90deg);
					}

					.caption-group-header {
						display: flex;
						justify-content: space-between;
						align-items: center;
						gap: 0.5em;
						width: 100%;
						padding-top: .5em;
						padding-bottom: .5em;
						border: none;
						background-color: transparent;
						font-size: 1em;

						#language-input {
							font-size: 0.9em;
							padding-left: 0.5em;
							color: $settings-text-color;
							height: 2.21em;
							border-radius: 0.75em;
							background-color: $settings-button-color;
							background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 500 500"><path d="M444.34,60.77H55.66c-22.15,0-36,23.98-24.92,43.17l194.34,336.6c11.08,19.19,38.77,19.19,49.84,0L469.26,103.94c11.08-19.19-2.77-43.17-24.92-43.17Z" fill="%23DFDCFF"/></svg>');
						}

						h3 {
							color: $settings-text-color;
							text-align: left;
						}

						.dropdown-icon {
							font-size: 1.25em;
							background-color: $settings-button-color;
							border-radius: 50%;
							margin: 0;
							width: 1.5em;
							height: 1.5em;
							display: flex;
							justify-content: center;
							align-items: center;

							svg {
								width: 1em;
								height: 1em;
								fill: $settings-text-color;
								transform: rotate(180deg);
								transition: transform 0.2s ease-in-out;
							}
						}
					}

					> * {
						padding-right: $settings-inside-padding;
						padding-left: $settings-inside-padding;
					}
				}
			}
		}

		#settings-details-navbar {
			display: flex;
			justify-content: space-around;
			align-items: center;
			width: 90%;

			svg {
				fill: $settings-text-color;
				stroke: $settings-text-color;
			}

			.navbar-button-open {
				font-size: 1.75em;
				line-height: 0.75em;
				margin-top: $settings-details-button-spacing - $settings-details-padding-top;
				padding: $settings-details-padding-top 0.25em $settings-details-button-spacing;
			}
			
			.navbar-button {
				border: none;
				background-color: transparent;				
				font-size: 1em;
				padding: 0.2em 0.4em;
				line-height: 0.75em;

				&#guide-link {
					margin: $settings-details-button-spacing 0;
					font-size: 1.75em;
				}

				transition: transform 0.2s ease-in-out;

				&:hover {
					transform: scale(1.1);
				}
			}
			
			.navbar-button-container.isOpen {
				position: relative;

				.navbar-button-open {
					background-color: $settings-details-background;
					border-top-left-radius: 0.5em;
					border-top-right-radius: 0.5em;
				}

				.binder {
					position: absolute;
					width: 100%;
					height: calc($settings-main-gap + 0.75px);
					display: block;
					background-color: $settings-details-background;
					backdrop-filter: blur(7px);
					box-shadow: -5px 0 0 0 $settings-details-shadow-color,
					5px 0 0 0 $settings-details-shadow-color,
					0 0 4em 2em $settings-darken-area;
					z-index: -10;
				}
			}
		}

		#settings-details {
			width: 100%;
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
			padding: 0.5em;
			background-color: rgba($settings-details-background, 0.9);

			.settings-details-container {
				background-color: $settings-darken-area;
				border-radius: $settings-border-radius;

				.settings-details-header {
					padding: 0.5em $settings-inside-padding;
				}

				.caption-group-content-container {
					padding: 0 $settings-inside-padding 0.25em;
					margin-bottom: 0.25em;

					.caption-group-content {
						padding-bottom: 0.25em;
					}
				}

				.settings-details-selector-container {
					display: flex;
					justify-content: space-between;
					padding: 0 2em 0.5em 0.8em;
					margin-left: 0.2em;

					.settings-details-selector {
						display: flex;
						gap: 0.3em;
					}

					.input-button {
						background-color: transparent;
						border: none;
						font-size: 1.5em;
						line-height: 0.75em;
						
						svg {
							fill: $settings-text-color;
						}

						&.active {
							background-color: $settings-text-color;
							
							svg {
								fill: $settings-text-secondary;
							}
						}

						padding: 0.1em;
						border-radius: 0.1em;
					}
				}
			}
		}
		
		.caption-group-content-container {
			display: flex;
			align-items: stretch;
			padding-bottom: 0.5em;

			.vertical-bar {
				width: 0.2em;
				background-color: $settings-text-color;
				border-radius: 0.2em;
			}
			
			.caption-group-content {
				display: flex;
				flex-direction: column;
				justify-content: space-between;
				align-items: center;
				width: 100%;
				gap: $settings-gap-between-group;
				padding: 0.5em 1em;

				.caption-group-content-item {
					display: flex;
					justify-content: space-between;
					width: 100%;
					font-size: 0.9em;
		
					&.group-opacity, &.group-font-size, &.group-font-family {
						flex-direction: column;

						&:not(.group-font-family) {
							gap: 0.25em;
						}
		
						> div {
							display: flex;
							justify-content: space-between;
						}
		
						> select {
							margin-top: calc($settings-gap-between-group / 2);
						}
		
						> input[type="range"] {
							margin-top: $settings-gap-between-group;
							margin-bottom: calc((1em - 0.3em)/2); // 1em = height of thumb, 0.3em = height of range
							width: 100%;
							appearance: none;
							height: 0.3em;
							box-shadow: none;
							cursor: pointer;
		
							&::-webkit-slider-thumb {
								appearance: none;
								width: 1em;
								height: 1em;
								border-radius: 50%;
								background-color: $settings-text-color;
								box-shadow: 0 0 0.5em 0.5em $settings-button-color;
							}
						}
					}
		
					.caption-number-container {
						position: relative;
						color: $settings-text-secondary;
		
						input {
							padding-right: 1.2em;
						}
		
						.units {
							position: absolute;
							right: 0;
							top: 0;
							font-size: 1em;
							height: 1.5em;
							width: $settings-input-size;
							line-height: 1.5em;
							display: inline-flex;
							justify-content: center;
							align-items: center;
							gap: 0.1em;
							pointer-events: none;
		
							.invisible {
								visibility: hidden;
							}
						}
					}
		
					label {
						font-size: 1em;
					}
		
					input {
						height: 1.5em;
						width: $settings-input-size;
						border: 0;
						border-radius: $settings-input-border-radius;
						padding: 0;
						margin: 0;
						background-color: $settings-text-color;
						
						font-family: inherit;
						font-weight: normal;
						font-size: 1em;
						line-height: 1em;
						color: $settings-text-secondary;
						text-align: center;
						box-shadow: $settings-input-shadow;
		
						// Remove arrows on number input
						&::-webkit-outer-spin-button,
						&::-webkit-inner-spin-button {
							-webkit-appearance: none;
							margin: 0;
						}
		
						// Remove arrows on Firefox
						&[type=number] {
							appearance: textfield;
							-moz-appearance: textfield;
						}
		
						// Border radius on color picker on Firefox
						&[type=color] {
							cursor: pointer;
							box-shadow: none;

							&::-moz-color-swatch {
								border-radius: $settings-input-border-radius;
							}
						}
						
						&:focus, &:active {
							box-shadow: $settings-input-shadow-out;
							transition: box-shadow 0.5s;
						}
		
						&:not(input[type="range"]) {
							&::-webkit-color-swatch {
								border: none;
								border-radius: $settings-input-border-radius;
							}
		
							&::-webkit-color-swatch-wrapper {
								padding: 0;
							}
						}
					}
		
					@each $font in $font-families {
						option[value="#{$font}"] {
							font-family: #{$font};
						}
					}
				}
			}
		}
	}

	// Buttons
	.caption-button-container {
		display: flex;
		flex-direction: column;
		padding: 0;
		gap: 0.5em;

		div {
			display: flex;
			justify-content: space-between;
			align-items: center;
			width: 100%;
			gap: 0.5em;
			margin-top: 0.5em;
		}
		
		button {
			padding: 0.5em 0.3em;
			border: 0;
			border-radius: 0.75em;
			font-size: 1em;
			font-family: inherit;
			line-height: 1em;
			background-color: $settings-button-color;
			color: inherit;
			width: 100%;
			box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.5);

			transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;

			&:hover, &:active {
				background-color: $settings-text-color;
				color: $settings-button-color;	
			}

			&:active {
				box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.5) inset;
			}
		}
	}

	#buttons-container {
		position: absolute;
		left: 0;
		bottom: $settings-movable-bottom;
		z-index: 15;

		font-size: $buttons-font-size;
		padding: $buttons-padding-Y $buttons-padding-X;
		background-color: $buttons-color;
		border-top-right-radius: 0.25em;
		border-bottom-right-radius: 0.25em;

		display: flex;
		align-items: center;
		gap: $buttons-min-gap;

		// Settings wheel
		> button {
			height: #{$buttons-height}em;
			border: none;
			background-color: transparent;
			
			padding: 0.12em 0.15em;
			font-size: 1em;
			
			&:after {
				font-size: 0.75em;
			}

			svg {
				transition: transform 0.2s ease-in-out;
				
				& > * {
					fill: $settings-text-color;
				}
			}

			&:hover svg {
				transform: scale(1.1);
			}
		}
	}
}

// Button
button {
	cursor: pointer;
}

// Select
select {
	height: 1.5em;
	border: 0;
	border-radius: $settings-input-border-radius;
	padding-left: 1em;
	padding-right: 2em;
	font-family: inherit;
	font-weight: lighter;
	font-size: 1em;
	line-height: 1.5em;
	text-align: left;
	color: $settings-text-secondary;
	background-color: $settings-text-color;
	box-shadow: $settings-input-shadow;
	width: 100%;
	max-width: 100%;

	&#language-input {
		font-size: 0.9em;
		padding-left: 0.5em;
	}

	&:disabled {
		background-color: $settings-disabled-color;
	}

	&:not(:disabled) {
		cursor: pointer;

		&:focus, &:active {
			box-shadow: $settings-input-shadow-out;
			transition: box-shadow 0.5s;
		}
	}

	/* Remove arrow */
	appearance: none;

	/* Add my customisable arrow */
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 500 500"><path d="M444.34,60.77H55.66c-22.15,0-36,23.98-24.92,43.17l194.34,336.6c11.08,19.19,38.77,19.19,49.84,0L469.26,103.94c11.08-19.19-2.77-43.17-24.92-43.17Z" fill="%231F1F23"/></svg>');
	background-repeat: no-repeat;
	background-position-x: 95%;
	background-position-y: 50%;
	background-size: 1rem;
}

// Tooltip
[data-tooltip] {
	position: relative;

	&:hover:before,
	&:hover:after {
		visibility: visible;
		opacity: 1;
	}

	&:before,
	&:after {
		position: absolute;
		transform: translate(-50%, -5px);
		font-size: 1.2em;
		line-height: 1em;

		transition: opacity ease-in-out .1s;

		// Hide default
		visibility: hidden;
		opacity: 0;
	}

	&[data-tooltip-content="left"]:after {
		left: 0;
		transform: translate(0, -5px);
	}

	&:after {
		// Tooltip content
		content: attr(data-tooltip);
		text-align: center;
		white-space: nowrap;
		
		background: $theme-text-color;
		color: $theme-background-color;
		padding: 0.4em 0.5em;
		border-radius: 0.1em;
		
		bottom: 100%;
		left: 50%;
		z-index: 20;
	}

	&::before {
		// Create arrow
		content: "";
		border: 0.5em solid transparent;
		border-bottom-width: 0;
	
		border-top-color: $theme-text-color;
		
		bottom: calc(100% - (0.5em - 5px));
		left: 50%;
		z-index: 30;
	}
}